@top Program { statement* }

statement {
  ProjectDeclaration |
  TableDeclaration |
  RefDeclaration |
  EnumDeclaration |
  NoteDeclaration |
  TableGroupDeclaration |
  TablePartialDeclaration
}

ProjectDeclaration {
  Project Identifier ProjectBody
}

ProjectBody {
  BlockStart projectItem* BlockEnd
}

projectItem {
  DatabaseTypeItem |
  NoteItem
}

DatabaseTypeItem { Database_type ":" String }
NoteItem { Note ":" String}

TableDeclaration {
  Table Identifier ("." Identifier)? (As Identifier)? TableSettings? TableBody
}

TableBody {
  BlockStart tableItem* BlockEnd
}

TableSettings { "[" tableSetting ("," tableSetting)* "]" }
tableSetting { HeadercolorSetting }

tableItem {
  TablePartialReferenceItem |
  ColumnItem |
  NoteItem |
  IndexDeclaration
}

TablePartialReferenceItem {
  TablePartialReferenceKeyword Identifier
}

TablePartialReferenceKeyword { "~" }

ColumnItem {
  (String | Identifier) ColumnDataType ("(" Identifier ")")? ColumnSettings?
}

ColumnDataType {
  DataType |
  Identifier ("." Identifier)*
}

ColumnSettings { "[" columnSetting ("," columnSetting)* "]" }

columnSetting {
  NoteSetting |
  PrimarySetting |
  NullSetting |
  UniqueSetting |
  DefaultSetting |
  IncrementSetting |
  RefSetting
}

NoteSetting {Note ":" String }
PrimarySetting { Pk | Primary Key }
NullSetting { Null | Not Null }
UniqueSetting { Unique }
DefaultSetting { Default ":" (String | Number | BooleanType | Null) }
IncrementSetting { Increment }
RefSetting { Ref ":" relationType RefIdentifier }
NameSetting { Name ":" String}
TypeSetting { Type ":" Identifier}
ColorSetting { Color ":" ColorCode}
HeadercolorSetting { Headercolor ":" ColorCode}
DeleteSetting { Delete ":" RefAction}
UpdateSetting { Update ":" RefAction}

IndexDeclaration {
  Indexes IndexBody
}

IndexBody {
  BlockStart IndexItem (IndexItem)* BlockEnd
}

IndexItem {
  (StringIdentifier | "(" StringIdentifier ("," StringIdentifier)* ")") IndexSettings?
}

IndexSettings {
  "[" indexSetting ("," indexSetting)* "]"
}

indexSetting {
  TypeSetting |
  NameSetting |
  UniqueSetting |
  PrimarySetting |
  NoteSetting
}

RefDeclaration {
  Ref Identifier? ( RefBody | ":" RefItem)
}

RefBody {
  BlockStart RefItem* BlockEnd
}

RefItem {
  RefIdentifier relationType RefIdentifier RefSettings?
}

RefIdentifier {
  Identifier "." (CompositeIdentifier | Identifier) |
  Identifier "." Identifier "." (CompositeIdentifier | Identifier)
}

CompositeIdentifier {
  "(" Identifier ("," Identifier)* ")"
}

RefSettings {
  "[" refSetting ("," refSetting)* "]"
}

refSetting {
  UpdateSetting | DeleteSetting | ColorSetting
}

RefAction {
  Cascade | Restrict | Set Null | Set Default | No Action
}

relationType {
  OneToOne |
  OneToMany |
  ManyToOne |
  ManyToMany
}

EnumDeclaration {
  Enum Identifier EnumBody
}

EnumBody {
  BlockStart EnumItem* BlockEnd
}

EnumItem { (Identifier | String) ("[" EnumItemSettings "]")? }
EnumItemSettings { enumItemSetting ("," enumItemSetting)* }
enumItemSetting {
  NoteSetting
}

NoteDeclaration {
  Note Identifier NoteBody
}

NoteBody {
  BlockStart String BlockEnd
}

TableGroupDeclaration {
  TableGroup Identifier TableGroupSettings? TableGroupBody
}

TableGroupBody {
  BlockStart tableGroupItem* BlockEnd
}

tableGroupItem {
  Identifier
}

TableGroupSettings {
  "[" tableGroupSetting ("," tableGroupSetting)* "]"
}

tableGroupSetting {
  ColorSetting | NoteSetting
}

TablePartialDeclaration {
  TablePartial Identifier TableSettings? TableBody
}

DataType {
  // Numeric types
  Integer | Tinyint | Smallint | Mediumint | Int | Bigint |
  Float | Double | Decimal | Dec | Bit |
  Bool | Real | Money | Binary_float | Binary_double |
  Smallmoney | Boolean |

  // String types
  Enum | Char | Binary | Varchar | Varbinary |
  Tinyblob | Tinytext | Blob | Text | Mediumblob |
  Mediumtext | Longblob | Longtext | Set | Inet6 |
  Uuid | Nvarchar | Nchar | Ntext | Image |
  Varchar2 | Nvarchar2 |

  // Date/Time types
  Date | Time | Datetime | Datetime2 | Timestamp |
  Year | Smalldatetime | Datetimeoffset |

  // Other types
  Xml | Sql_variant | Uniqueidentifier | Cursor |
  Bfile | Clob | Nclob | Raw
}

BooleanType { True | False }

@tokens {
  Identifier { $[a-zA-Z0-9_]+ }

  BlockStart { "{" }
  BlockEnd { "}" }

  Number {
    "0x" $[0-9a-fA-F]+ |
    ($[0-9]+ ("." $[0-9]*)? | "." $[0-9]+) ($[eE] $[+-]? $[0-9]+)?
  }
  @precedence { Number, Identifier }

  ColorCode {
    "#" $[0-9a-fA-F]$[0-9a-fA-F]$[0-9a-fA-F]($[0-9a-fA-F]$[0-9a-fA-F]$[0-9a-fA-F])?
  }

  String {
    '"' (!["\\] | "\\" _)* '"' |
    "'" (!['\\] | "\\" _)* "'" |
    "`" (![`\\] | "\\" _)* "`" |
    "'''" tripleQuoteRest
  }
  tripleQuoteRest {
    !['] tripleQuoteRest
    | "'" tripleQuoteAfterSingle
  }
  tripleQuoteAfterSingle {
    !['] tripleQuoteRest |
    "'" tripleQuoteAfterDouble
  }
  tripleQuoteAfterDouble {
    !['] tripleQuoteRest |
    "'"
  }

  LineComment { "//" ![\n]* }
  BlockComment { "/*" blockCommentRest }
  blockCommentRest { ![*] blockCommentRest | "*" blockCommentAfterStar }
  blockCommentAfterStar { "/" | "*" blockCommentAfterStar | ![/*] blockCommentRest }

  StringIdentifier {String | Identifier}

  @precedence { BlockComment, LineComment }

  whitespace { $[ \t\r\n]+ }
  linebreak { "\n" }

  OneToOne { "-" }
  OneToMany { "<" }
  ManyToOne { ">" }
  ManyToMany { "<>" }
}

@external extend {Identifier} keywords from "./tokens" {
  // Main declaration keywords
  Project,
  TableGroup,
  Table,
  TablePartial,
  Enum,

  // Common keywords
  Database_type,
  Note,
  As,
  Ref,
  Type,
  Delete,
  Update,
  Cascade,
  Restrict,
  Set,
  No,
  Action,

  // Column settings
  Pk,
  Unique,
  Null,
  Not,
  Increment,
  Default,

  // Setting names
  Indexes,
  Headercolor,
  Primary,
  Key,
  Name,
  Color,

  // Bool
  True,
  False

  // Numeric data types
  Integer,
  Tinyint,
  Smallint,
  Mediumint,
  Int,
  Bigint,
  Float,
  Double,
  Decimal,
  Dec,
  Bit,
  Bool,
  Boolean,
  Real,
  Money,
  Binary_float,
  Binary_double,
  Smallmoney,

  // String data types
  Char,
  Binary,
  Varchar,
  Varbinary,
  Tinyblob,
  Tinytext,
  Blob,
  Text,
  Mediumblob,
  Mediumtext,
  Longblob,
  Longtext,
  Inet6,
  Uuid,
  Nvarchar,
  Nchar,
  Ntext,
  Image,
  Varchar2,
  Nvarchar2,

  // Date/Time data types
  Date,
  Time,
  Datetime,
  Datetime2,
  Timestamp,
  Year,
  Smalldatetime,
  Datetimeoffset,

  // Other data types
  Xml,
  Sql_variant,
  Uniqueidentifier,
  Cursor,
  Bfile,
  Clob,
  Nclob,
  Raw
}

@skip { whitespace | LineComment | BlockComment }

@precedence {
  ManyToMany,
  ManyToOne,
  OneToMany
}

@detectDelim